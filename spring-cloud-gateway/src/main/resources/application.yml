server:
  port: 8760

spring:
  application:
    name: spring-cloud-gateway

  cloud:
    gateway:
      httpclient:
        pool:
          type: elastic
          max-connections: 1000
          acquire-timeout: 80000
          max-life-time: 300s
          max-idle-time: 20000
        connect-timeout: 30000
        response-timeout: 60s
      default-filters:
        - name: Retry
          args:
            methods: GET,PUT,POST,DELETE
            exceptions:
              - reactor.netty.http.client.PrematureCloseException
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        - id: coub-com
          uri: https://coub.com/
          predicates:
            - Path=/cc/**
          filters:
            - StripPrefix=1
            - AddRequestHeader=Accept-Encoding, 'gzip, deflate, br'
            - AddRequestHeader=User-Agent, 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0'
        #            - name: RequestRateLimiter
        #              args:
        #                redis-rate-limiter.replenishRate: 2
        #                redis-rate-limiter.burstCapacity: 5
        #                redis-rate-limiter.requestedTokens: 10
        - id: spring-eureka-registry
          uri: lb://spring-eureka-registry
          predicates:
            - Path=/registry/**
          filters:
            - StripPrefix=1
        - id: eureka
          uri: lb://spring-eureka-registry
          predicates:
            - Path=/eureka/**
        - id: subscriptions-holder
          uri: lb://subscriptions-holder
          predicates:
            - Path=/sh/**
          filters:
            - StripPrefix=1
        - id: kafka-message-producer
          uri: lb://kafka-message-producer
          predicates:
            - Path=/kmp/**
          filters:
            - StripPrefix=1

info:
  app:
    name: ${spring.application.name}

eureka:
  client:
    registerWithEureka: true
    serviceUrl:
      defaultZone: ${EUREKA_SERVER:http://localhost:8761/eureka}
    healthcheck:
      enabled: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
    #    instance-id: "${spring.application.name}:${server.port}"

management:
  info:
    env:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true
  health:
    defaults:
      enabled: true
    diskspace:
      enabled: true
#  zipkin:
#    tracing:
#      connect-timeout: 1s
#      read-timeout: 10s
#      endpoint: ${ZIPKIN_SERVER:http://localhost:9411/api/v2/spans}
  tracing:
    sampling:
      probability: 1.0

  # For Exemplars to work we need histogram buckets
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http.server.requests: true

logging:
  level:
    root: INFO
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
