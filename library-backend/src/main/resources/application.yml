spring:
  application:
    name: library-backend

  data:
    mongodb:
      authentication-database: admin
      database: ${MONGODB_DATABASE:admin} # library
      port: ${MONGODB_PORT:27017} # 27017
      host: ${MONGODB_HOST:localhost} # docker container name
      # обязательно при шифровании пароля необходимо явно указать алгоритм и прочие параметры,
      # что бы не напороться на несоответствие
      password: ENC(ukzZHI9tZCXVJ0wTuHD+QykLgZwdO+Ma) # mongopass
      username: admin
  jmx:
    enabled: true

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${OAUTH_PROVIDER:http://localhost:9000}

server:
  port: 8090


info:
  name: ${spring.application.name}
  description: library backend with resilience4j
  environment: ${spring.profiles.active}
  version: 0.0.1

jasypt:
  encryptor:
    password: masterpassword
    algorithm: PBEWithMD5AndDES
    iv-generator-classname: org.jasypt.iv.NoIvGenerator

mongock:
  runner-type: "InitializingBean"
  change-logs-scan-package:
    - ru.dankoy.library.core.mongock.changelogs
  mongo-db:
    write-concern:
      journal: false
    read-concern: local

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  health:
    defaults:
      enabled: true
    diskspace:
      enabled: true
  #    circuitbreakers:
  #      enabled: true
  tracing:
    sampling:
      probability: 1.0

  # For Exemplars to work we need histogram buckets
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http.server.requests: true

logging:
  level:
    root: INFO
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

#resilience4j:
#  circuitbreaker:
#    metrics:
#      enabled: true
#    configs:
#      default:
#        registerHealthIndicator: true
#        slidingWindowSize: 10
#        permittedNumberOfCallsInHalfOpenState: 3
#        slidingWindowType: TIME_BASED
#        minimumNumberOfCalls: 20
#        waitDurationInOpenState: 10s
#        failureRateThreshold: 50
#        eventConsumerBufferSize: 10
#    instances:
#      commentaryService:
#        baseConfig: default
#        waitDurationInOpenState: 2s
#        slidingWindowSize: 1
#        permittedNumberOfCallsInHalfOpenState: 1
#
#  timelimiter:
#    metrics:
#      enabled: true
#    configs:
#      default:
#        timeout-duration: 3s
#    instances:
#      commentaryService:
#        baseConfig: default
#
#  retry:
#    instances:
#      commentaryService:
#        maxAttempts: 3
#        waitDuration: 2s
#        enableExponentialBackoff: true # увеличит время ожидания между ретраями
#        exponentialBackoffMultiplier: 2

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER:http://localhost:8761/eureka}
    register-with-eureka: true
    fetch-registry: true
    eureka-service-url-poll-interval-seconds: 5000
  instance:
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
    instance-id: ${spring.application.name}:${server.port}
    prefer-ip-address: true