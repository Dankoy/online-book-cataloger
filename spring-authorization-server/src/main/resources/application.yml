spring:
  application.name: spring-authorization-server
  security:
    oauth2:
      authorizationserver:
        issuer: http://localhost:9000

  data:
    mongodb:
      authentication-database: admin
      database: ${MONGODB_DATABASE:admin} # library
      port: ${MONGODB_PORT:27017} # 27017
      host: ${MONGODB_HOST:localhost} # docker container name
      # обязательно при шифровании пароля необходимо явно указать алгоритм и прочие параметры,
      # что бы не напороться на несоответствие
      password: ENC(ukzZHI9tZCXVJ0wTuHD+QykLgZwdO+Ma) # mongopass
      username: admin
  jmx:
    enabled: true

jasypt:
  encryptor:
    password: ${JASYPT_MASTER_PASSWORD:masterpassword}
    algorithm: PBEWithMD5AndDES
    iv-generator-classname: org.jasypt.iv.NoIvGenerator

server:
  port: 9000

auth:
  client:
    url: ""



management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  health:
    defaults:
      enabled: true
    diskspace:
      enabled: true
  #    circuitbreakers:
  #      enabled: true
  tracing:
    sampling:
      probability: 1.0

  # For Exemplars to work we need histogram buckets
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http.server.requests: true

logging:
  level:
    root: INFO
    org:
      springframework:
        security: debug
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"


eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER:http://localhost:8761/eureka}
    register-with-eureka: true
    fetch-registry: true
    eureka-service-url-poll-interval-seconds: 5000
  instance:
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
    instance-id: ${spring.application.name}:${server.port}
    prefer-ip-address: true


debug: false